name: Terraform

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [dev, staging, prod]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Initial Terraform Init
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets[matrix.environment.toUpperCase() + '_AWS_ACCESS_KEY_ID'] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets[matrix.environment.toUpperCase() + '_AWS_SECRET_ACCESS_KEY'] }}
        run: terraform init

      - name: Select or Create Terraform Workspace
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets[matrix.environment.toUpperCase() + '_AWS_ACCESS_KEY_ID'] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets[matrix.environment.toUpperCase() + '_AWS_SECRET_ACCESS_KEY'] }}
        run: terraform workspace select ${{ matrix.environment }} || terraform workspace new ${{ matrix.environment }}

      - name: Reconfigure Terraform Backend
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets[matrix.environment.toUpperCase() + '_AWS_ACCESS_KEY_ID'] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets[matrix.environment.toUpperCase() + '_AWS_SECRET_ACCESS_KEY'] }}
        run: terraform init -reconfigure -backend-config="key=state/${{ matrix.environment }}/terraform.tfstate"

      - name: Terraform Plan
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets[matrix.environment.toUpperCase() + '_AWS_ACCESS_KEY_ID'] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets[matrix.environment.toUpperCase() + '_AWS_SECRET_ACCESS_KEY'] }}
        run: terraform plan -var-file=../environments/${{ matrix.environment }}.tfvars

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets[matrix.environment.toUpperCase() + '_AWS_ACCESS_KEY_ID'] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets[matrix.environment.toUpperCase() + '_AWS_SECRET_ACCESS_KEY'] }}
        run: terraform apply -auto-approve -var-file=../environments/${{ matrix.environment }}.tfvars


        

