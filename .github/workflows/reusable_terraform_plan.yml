name: Terraform Deployment

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      working_directory:
        required: true
        type: string
      aws_region:
        required: true
        type: string
      terraform_version:
        required: true
        type: string
      backend_config_key:
        required: true
        type: string
      workspace:
        required: true
        type: string
      var_file:
        required: true
        type: string
    secrets:
      token:
        required: false

  workflow_dispatch:

env:
  TF_IN_AUTOMATION: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.aws_region }}

      - name: Initialize Terraform Backend
        working-directory: ${{ inputs.working_directory }}
        run: terraform init -reconfigure -backend-config="key=${{ inputs.backend_config_key }}"

      - name: Select or Create Terraform Workspace
        working-directory: ${{ inputs.working_directory }}
        run: terraform workspace new ${{ inputs.workspace }} || terraform workspace select ${{ inputs.workspace }}

      - name: Terraform Initialize
        working-directory: ${{ inputs.working_directory }}
        run: terraform init

      - name: Terraform Plan
        working-directory: ${{ inputs.working_directory }}
        run: terraform plan -var-file="${{ inputs.var_file }}"

      - name: Terraform Apply
        working-directory: ${{ inputs.working_directory }}
        run: terraform apply -auto-approve -var-file="${{ inputs.var_file }}"
        if: github.ref == 'refs/heads/main'





















        




















        























        

