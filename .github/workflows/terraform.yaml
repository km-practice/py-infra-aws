name: Terraform Deployment

on:
  push:
    branches:
      - main
  # pull_request:
  #   branches:
  #     - main

env:
  TF_IN_AUTOMATION: true

jobs:
  deploy_dev:
    name: Deploy to dev
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Initialize Terraform Backend
        working-directory: terraform/
        run: terraform init -reconfigure -backend-config="key=state/dev/terraform.tfstate"

      - name: Select or Create Terraform Workspace
        working-directory: terraform/
        run: terraform workspace new dev || terraform workspace select dev

      - name: Terraform Plan
        working-directory: terraform/
        run: terraform plan -var-file="environments/dev.tfvars"

      - name: Terraform Apply
        working-directory: terraform/
        run: terraform destroy -auto-approve -var-file="environments/dev.tfvars"
        if: github.ref == 'refs/heads/main'

  deploy_staging:
    name: Deploy to staging
    runs-on: ubuntu-latest
    needs: deploy_dev
    environment: staging

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Initialize Terraform Backend
        working-directory: terraform/
        run: terraform init -reconfigure -backend-config="key=state/staging/terraform.tfstate"

      - name: Select or Create Terraform Workspace
        working-directory: terraform/
        run: terraform workspace new staging || terraform workspace select staging

      - name: Terraform Plan
        working-directory: terraform/
        run: terraform plan -var-file="environments/staging.tfvars"

      - name: Terraform Apply
        working-directory: terraform/
        run: terraform destroy -auto-approve -var-file="environments/staging.tfvars"
        if: github.ref == 'refs/heads/main'

  deploy_prod:
    name: Deploy to prod
    runs-on: ubuntu-latest
    needs: deploy_staging
    environment: prod

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Initialize Terraform Backend
        working-directory: terraform/
        run: terraform init -reconfigure -backend-config="key=state/prod/terraform.tfstate"

      - name: Select or Create Terraform Workspace
        working-directory: terraform/
        run: terraform workspace new prod || terraform workspace select prod

      - name: Terraform Plan
        working-directory: terraform/
        run: terraform plan -var-file="environments/prod.tfvars"

      - name: Terraform Apply
        working-directory: terraform/
        run: terraform destroy -auto-approve -var-file="environments/prod.tfvars"
        if: github.ref == 'refs/heads/main'










        

